(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("@goatlab/fluent-formio", [], factory);
	else if(typeof exports === 'object')
		exports["@goatlab/fluent-formio"] = factory();
	else
		root["@goatlab/fluent-formio"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(3);
var isBuffer = __webpack_require__(18);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(0);
var normalizeHeaderName = __webpack_require__(21);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(4);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(4);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(20)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(17);

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var settle = __webpack_require__(22);
var buildURL = __webpack_require__(24);
var parseHeaders = __webpack_require__(25);
var isURLSameOrigin = __webpack_require__(26);
var createError = __webpack_require__(5);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(27);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ( true &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(28);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(23);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _FluentConnector = __webpack_require__(9);

var _FluentConnector2 = _interopRequireDefault(_FluentConnector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _FluentConnector2.default;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _awaitToJs = __webpack_require__(10);

var _awaitToJs2 = _interopRequireDefault(_awaitToJs);

var _dayjs = __webpack_require__(11);

var _dayjs2 = _interopRequireDefault(_dayjs);

var _isSameOrAfter = __webpack_require__(12);

var _isSameOrAfter2 = _interopRequireDefault(_isSameOrAfter);

var _jwtDecode = __webpack_require__(13);

var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

var _Utilities = __webpack_require__(16);

var _Utilities2 = _interopRequireDefault(_Utilities);

var _axios = __webpack_require__(2);

var _axios2 = _interopRequireDefault(_axios);

var _goatFluent = __webpack_require__(36);

var _Connection = __webpack_require__(38);

var _Connection2 = _interopRequireDefault(_Connection);

var _AuthenticationError = __webpack_require__(40);

var _AuthenticationError2 = _interopRequireDefault(_AuthenticationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

_dayjs2.default.extend(_isSameOrAfter2.default);

exports.default = _goatFluent.Interface.compose({
  methods: {
    getToken: function getToken() {
      if (typeof localStorage === "undefined") return;
      var token = localStorage.getItem("formioToken");
      if (!token || this.getTokenType(token) === "x-token") return token;

      var decodedToken = (0, _jwtDecode2.default)(token);
      var expDate = _dayjs2.default.unix(decodedToken.exp);
      if ((0, _dayjs2.default)().isSameOrAfter(expDate)) {
        _goatFluent.Event.emit({
          name: "GOAT:SESSION:EXPIRED",
          data: expDate,
          text: "Session expired"
        });
        throw new _AuthenticationError2.default("Token has expired.");
      }
      return token;
    },
    baseUrl: function baseUrl() {
      var _connector = this.connector,
          baseUrl = _connector.baseUrl,
          name = _connector.name;


      if (!baseUrl) {
        throw new Error("You did not provide a baseUrl for the \"" + name + "\" connector");
      }
      return baseUrl.replace(/\/+$/, "");
    },
    get: function get() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var error, result, _ref, _ref2;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.ownerId) {
                  _this.andWhere("owner", "=", _this.ownerId);
                }
                error = void 0;
                result = void 0;
                _context.next = 5;
                return (0, _awaitToJs2.default)(_this.httpGET());

              case 5:
                _ref = _context.sent;
                _ref2 = _slicedToArray(_ref, 2);
                error = _ref2[0];
                result = _ref2[1];

                if (!error) {
                  _context.next = 12;
                  break;
                }

                console.log(error);
                throw new Error("Error while getting submissions");

              case 12:

                result = _this.jsApplySelect(result && result.data);
                result = _this.jsApplyOrderBy(result);

                return _context.abrupt("return", result);

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    },
    all: function all() {
      var _this2 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", _this2.get());

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, _this2);
      }))();
    },
    numberOfRows: function numberOfRows() {
      var _this3 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var url, headers, filters, limit, skip, order, select, spacer, isOnline, response;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                url = _this3.getUrl();
                headers = _this3.getHeaders();
                filters = _this3.getFilters();
                limit = "?limit=1";
                skip = _this3.getSkip();
                order = _this3.getOrder();
                select = _this3.getSelect();
                spacer = "";


                url = url + spacer + limit;
                url = filters ? url + _this3.getSpacer(url) + filters : url;
                url = skip ? url + _this3.getSpacer(url) + skip : url;
                url = order ? url + _this3.getSpacer(url) + order : url;
                url = select ? url + _this3.getSpacer(url) + select : url;

                _context3.next = 15;
                return _Connection2.default.isOnline();

              case 15:
                isOnline = _context3.sent;

                if (isOnline) {
                  _context3.next = 18;
                  break;
                }

                throw new Error("Cannot make get request to " + url + ".You are not online");

              case 18:
                _context3.next = 20;
                return _axios2.default.get(url, { headers: headers });

              case 20:
                response = _context3.sent;
                return _context3.abrupt("return", response.headers["content-range"].split("/")[1]);

              case 22:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, _this3);
      }))();
    },
    paginate: function paginate(paginator) {
      var _this4 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var numberOfRows, results;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _this4.numberOfRows();

              case 2:
                numberOfRows = _context4.sent;


                _this4.offset((paginator.page - 1) * paginator.rowsPerPage).take(paginator.rowsPerPage);

                results = {};
                _context4.next = 7;
                return _this4.get();

              case 7:
                results.data = _context4.sent;

                results.paginator = {
                  page: paginator.page,
                  rowsPerPage: paginator.rowsPerPage,
                  rowsNumber: numberOfRows
                };

                console.log("paginator", results);

                return _context4.abrupt("return", results);

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, _this4);
      }))();
    },
    insert: function insert(data, options) {
      var _this5 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
        var _ref3, _ref4, error, result;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!Array.isArray(data)) {
                  _context5.next = 2;
                  break;
                }

                return _context5.abrupt("return", _this5.ArrayInsert(data, options));

              case 2:
                _context5.next = 4;
                return (0, _awaitToJs2.default)(_this5.httpPOST(data));

              case 4:
                _ref3 = _context5.sent;
                _ref4 = _slicedToArray(_ref3, 2);
                error = _ref4[0];
                result = _ref4[1];

                if (!error) {
                  _context5.next = 10;
                  break;
                }

                throw new Error("Cannot insert data");

              case 10:
                return _context5.abrupt("return", result.data);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, _this5);
      }))();
    },
    update: function update(data) {
      var _this6 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
        var _ref5, _ref6, error, result;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (data._id) {
                  _context6.next = 2;
                  break;
                }

                throw new Error("Formio connector error. Cannot update a Model without _id key");

              case 2:
                if (!data._id.includes("_local")) {
                  _context6.next = 4;
                  break;
                }

                throw new Error("Formio connector error. Cannot update a local document");

              case 4:
                _context6.next = 6;
                return (0, _awaitToJs2.default)(_this6.httpPUT(data));

              case 6:
                _ref5 = _context6.sent;
                _ref6 = _slicedToArray(_ref5, 2);
                error = _ref6[0];
                result = _ref6[1];

                if (!error) {
                  _context6.next = 13;
                  break;
                }

                console.log(error);
                throw new Error("Cannot insert data");

              case 13:
                return _context6.abrupt("return", result.data);

              case 14:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, _this6);
      }))();
    },
    clear: function clear() {
      var _this7 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
        var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            sure = _ref7.sure;

        var promises, _ref8, _ref9, error, data;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                if (!(!sure || sure !== true)) {
                  _context7.next = 2;
                  break;
                }

                throw new Error('Clear() method will delete everything!, you must set the "sure" parameter "clear({sure:true})" to continue');

              case 2:
                promises = [];
                _context7.next = 5;
                return (0, _awaitToJs2.default)(_this7.select("_id").pluck("_id"));

              case 5:
                _ref8 = _context7.sent;
                _ref9 = _slicedToArray(_ref8, 2);
                error = _ref9[0];
                data = _ref9[1];

                if (!error) {
                  _context7.next = 12;
                  break;
                }

                console.log(error);
                throw new Error("Cannot get remote Model");

              case 12:

                data.forEach(function (_id) {
                  promises.push(_this7.httpDelete(_id));
                });

                return _context7.abrupt("return", _axios2.default.all(promises));

              case 14:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, _this7);
      }))();
    },
    remove: function remove(_id) {
      var _this8 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
        var _ref10, _ref11, error, removed;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return (0, _awaitToJs2.default)(_this8.httpDelete(_id));

              case 2:
                _ref10 = _context8.sent;
                _ref11 = _slicedToArray(_ref10, 2);
                error = _ref11[0];
                removed = _ref11[1];

                if (!error) {
                  _context8.next = 9;
                  break;
                }

                console.log(error);
                throw new Error("FormioConnector: Could not delete " + _id);

              case 9:
                return _context8.abrupt("return", removed);

              case 10:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, _this8);
      }))();
    },
    find: function find(_id) {
      var _this9 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var _ref12, _ref13, error, data;

        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (!(typeof _id !== "string")) {
                  _context9.next = 2;
                  break;
                }

                throw new Error('Formio connector find() method only accepts strings "' + (typeof _id === "undefined" ? "undefined" : _typeof(_id)) + '" given "' + _id + '"');

              case 2:
                _context9.next = 4;
                return (0, _awaitToJs2.default)(_this9.where("_id", "=", _id).first());

              case 4:
                _ref12 = _context9.sent;
                _ref13 = _slicedToArray(_ref12, 2);
                error = _ref13[0];
                data = _ref13[1];

                if (!error) {
                  _context9.next = 11;
                  break;
                }

                console.log(error);
                throw new Error("Find() could not get remote data");

              case 11:
                return _context9.abrupt("return", data);

              case 12:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, _this9);
      }))();
    },
    getUrl: function getUrl() {
      var _this10 = this;

      var baseUrl = this && this.baseUrl() ? this.baseUrl() : undefined;
      var path = _Utilities2.default.get(function () {
        return _this10.remoteConnection.path;
      }, undefined);
      var id = _Utilities2.default.get(function () {
        return _this10.remoteConnection.id;
      }, undefined);
      var pullForm = _Utilities2.default.get(function () {
        return _this10.remoteConnection.pullForm;
      }, undefined);

      if (!pullForm && path) {
        path = !id ? path + "/submission" : path + "/submission/" + id;
      }

      if (!baseUrl) {
        throw new Error("Cannot get remote model. baseUrl not defined");
      }

      if (path) {
        return baseUrl + "/" + path;
      }
      return baseUrl;
    },
    getHeaders: function getHeaders() {
      var headers = {};
      var token = {};
      if (typeof localStorage !== "undefined") {
        token = this.getToken();
      }

      if (this.remoteConnection.token || this.remoteConnection.token === "") {
        token = this.remoteConnection.token;
      }

      if (!token) {
        return headers;
      }

      var type = this.getTokenType(token);
      headers[type] = token;
      return headers;
    },
    getSpacer: function getSpacer(url) {
      return url.substr(url.length - 1) === "&" ? "" : "&";
    },
    httpGET: function httpGET() {
      var _this11 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var url, headers, filters, limit, skip, order, select, spacer, isOnline;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                url = _this11.getUrl();
                headers = _this11.getHeaders();
                filters = _this11.getFilters();
                limit = _this11.getLimit();
                skip = _this11.getSkip();
                order = _this11.getOrder();
                select = _this11.getSelect();
                spacer = "";

                // Always limit the amount of requests

                url = url + spacer + limit;

                url = filters ? url + _this11.getSpacer(url) + filters : url;

                url = skip ? url + _this11.getSpacer(url) + skip : url;

                url = order ? url + _this11.getSpacer(url) + order : url;

                url = select ? url + _this11.getSpacer(url) + select : url;

                _context10.next = 15;
                return _Connection2.default.isOnline();

              case 15:
                isOnline = _context10.sent;

                if (isOnline) {
                  _context10.next = 18;
                  break;
                }

                throw new Error("Cannot make get request to " + url + ".You are not online");

              case 18:
                return _context10.abrupt("return", _axios2.default.get(url, { headers: headers }));

              case 19:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, _this11);
      }))();
    },
    httpPOST: function httpPOST(data) {
      var _this12 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var url, headers, isOnline;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                url = _this12.getUrl();
                headers = _this12.getHeaders();
                _context11.next = 4;
                return _Connection2.default.isOnline();

              case 4:
                isOnline = _context11.sent;

                if (isOnline) {
                  _context11.next = 7;
                  break;
                }

                throw new Error("Cannot make request post to " + url + ".You are not online");

              case 7:
                return _context11.abrupt("return", _axios2.default.post(url, data, { headers: headers }));

              case 8:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, _this12);
      }))();
    },
    httpPUT: function httpPUT(data) {
      var _this13 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var isOnline, url, headers;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return _Connection2.default.isOnline();

              case 2:
                isOnline = _context12.sent;
                url = _this13.getUrl() + "/" + data._id;
                headers = _this13.getHeaders();

                if (isOnline) {
                  _context12.next = 7;
                  break;
                }

                throw new Error("Cannot make request post to " + url + ".You are not online");

              case 7:
                return _context12.abrupt("return", _axios2.default.put(url, data, { headers: headers }));

              case 8:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, _this13);
      }))();
    },
    httpDelete: function httpDelete(_id) {
      var headers = this.getHeaders();
      var url = this.getUrl() + "/" + _id;

      return _axios2.default.delete(url, { headers: headers });
    },
    getTokenType: function getTokenType(token) {
      if (token.length > 32) {
        return "x-jwt-token";
      }
      return "x-token";
    },
    getFilters: function getFilters() {
      var filter = this.whereArray;

      if (!filter || filter.length === 0) {
        return undefined;
      }

      var filterQuery = "";

      filter.forEach(function (condition) {
        var valueString = "";
        var element = condition[0];
        var operator = condition[1];
        var value = condition[2];

        switch (operator) {
          case "=":
            filterQuery = filterQuery + element + "=" + value + "&";
            break;
          case "!=":
            filterQuery = filterQuery + element + "__ne=" + value + "&";
            break;
          case ">":
            filterQuery = filterQuery + element + "__gt=" + value + "&";
            break;
          case ">=":
            filterQuery = filterQuery + element + "__gte=" + value + "&";
            break;
          case "<":
            filterQuery = filterQuery + element + "__lt=" + value + "&";
            break;
          case "<=":
            filterQuery = filterQuery + element + "__lte=" + value + "&";
            break;
          case "in":
            valueString = "";
            value.forEach(function (val, index, array) {
              valueString = index === array.length - 1 ? valueString + val : valueString + val + ",";
            });
            filterQuery = filterQuery + element + "__in=" + valueString + "&";
            break;
          case "nin":
            valueString = "";
            value.forEach(function (val, index, array) {
              valueString = index === array.length - 1 ? valueString + val : valueString + val + ",";
            });
            filterQuery = filterQuery + element + "__nin=" + valueString + "&";
            break;
          case "exists":
            filterQuery = filterQuery + element + "__exists=" + true + "&";
            break;
          case "!exists":
            filterQuery = filterQuery + element + "__exists=" + false + "&";
            break;
          case "regex":
            filterQuery = filterQuery + element + "__regex=" + value + "&";
            break;
        }
      });
      return filterQuery.substring(0, filterQuery.length - 1);
    },
    getLimit: function getLimit() {
      var limit = "?limit=";

      if (!this.limitNumber || this.limitNumber === 0) {
        this.limitNumber = 50;
      }

      return "" + limit + this.limitNumber;
    },
    getSkip: function getSkip() {
      var skip = "skip=";

      if (!this.offsetNumber) {
        this.offsetNumber = 0;
      }

      return skip + this.offsetNumber;
    },
    getOrder: function getOrder() {
      var order = "sort=";
      var or = this.orderByArray[1] === "DESC" ? "-" : "";
      return order + or + this.orderByArray[0];
    },
    getSelect: function getSelect() {
      var select = this.selectArray;

      select = select.map(function (e) {
        return e.split(" as ")[0];
      });

      if (!select) {
        return;
      }

      return "select=" + select.join(",");
    }
  }
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "to", function() { return to; });
/**
 * @param { Promise } promise
 * @param { Object= } errorExt - Additional Information you can pass to the err object
 * @return { Promise }
 */
function to(promise, errorExt) {
    return promise
        .then(function (data) { return [null, data]; })
        .catch(function (err) {
        if (errorExt) {
            Object.assign(err, errorExt);
        }
        return [err, undefined];
    });
}


/* harmony default export */ __webpack_exports__["default"] = (to);
//# sourceMappingURL=await-to-js.es5.js.map


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(this,function(){"use strict";var t="millisecond",e="second",n="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",h=/^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,f=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},d={s:c,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+c(r,2,"0")+":"+c(i,2,"0")},m:function(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),r=t.clone().add(n,u),i=e-r<0,s=t.clone().add(n+(i?-1:1),u);return Number(-(n+(e-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},$={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},l="en",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,e,n){var r;if(!t)return null;if("string"==typeof t)m[t]&&(r=t),e&&(m[t]=e,r=t);else{var i=t.name;m[i]=t,r=i}return n||(l=r),r},D=function(t,e,n){if(y(t))return t.clone();var r=e?"string"==typeof e?{format:e,pl:n}:e:{};return r.date=t,new v(r)},g=d;g.l=M,g.i=y,g.w=function(t,e){return D(t,{locale:e.$L,utc:e.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0)||l,this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r)return n?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(e)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return g},d.isValid=function(){return!("Invalid Date"===this.$d.toString())},d.isSame=function(t,e){var n=D(t);return this.startOf(e)<=n&&n<=this.endOf(e)},d.isAfter=function(t,e){return D(t)<this.startOf(e)},d.isBefore=function(t,e){return this.endOf(e)<D(t)},d.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},d.year=function(t){return this.$g(t,"$y",o)},d.month=function(t){return this.$g(t,"$M",u)},d.day=function(t){return this.$g(t,"$W",i)},d.date=function(t){return this.$g(t,"$D","date")},d.hour=function(t){return this.$g(t,"$H",r)},d.minute=function(t){return this.$g(t,"$m",n)},d.second=function(t){return this.$g(t,"$s",e)},d.millisecond=function(e){return this.$g(e,"$ms",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,a){var h=this,f=!!g.u(a)||a,c=g.p(t),d=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return f?n:n.endOf(i)},$=function(t,e){return g.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},l=this.$W,m=this.$M,y=this.$D,M="set"+(this.$u?"UTC":"");switch(c){case o:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var D=this.$locale().weekStart||0,v=(l<D?l+7:l)-D;return d(f?y-v:y+(6-v),m);case i:case"date":return $(M+"Hours",0);case r:return $(M+"Minutes",1);case n:return $(M+"Seconds",2);case e:return $(M+"Milliseconds",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,a){var h,f=g.p(s),c="set"+(this.$u?"UTC":""),d=(h={},h[i]=c+"Date",h.date=c+"Date",h[u]=c+"Month",h[o]=c+"FullYear",h[r]=c+"Hours",h[n]=c+"Minutes",h[e]=c+"Seconds",h[t]=c+"Milliseconds",h)[f],$=f===i?this.$D+(a-this.$W):a;if(f===u||f===o){var l=this.clone().set("date",1);l.$d[d]($),l.init(),this.$d=l.set("date",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,e){return this.clone().$set(t,e)},d.get=function(t){return this[g.p(t)]()},d.add=function(t,a){var h,f=this;t=Number(t);var c=g.p(a),d=function(e){var n=new Date(f.$d);return n.setDate(n.getDate()+Math.round(e*t)),g.w(n,f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[n]=6e4,h[r]=36e5,h[e]=1e3,h)[c]||1,l=this.valueOf()+t*$;return g.w(l,this)},d.subtract=function(t,e){return this.add(-1*t,e)},d.format=function(t){var e=this;if(!this.isValid())return"Invalid Date";var n=t||"YYYY-MM-DDTHH:mm:ssZ",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,"0")},$=i.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,"0"),MMM:c(i.monthsShort,a,h,3),MMMM:h[a]||h(this,n),D:this.$D,DD:g.s(this.$D,2,"0"),d:this.$W,dd:c(i.weekdaysMin,this.$W,o,2),ddd:c(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:s,HH:g.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:u,mm:g.s(u,2,"0"),s:this.$s,ss:g.s(this.$s,2,"0"),SSS:g.s(this.$ms,3,"0"),Z:r};return String(n.replace(f,function(t,e){return e||l[t]||r.replace(":","")}))},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=g.p(h),$=D(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=g.m(this,$);return y=(c={},c[o]=y/12,c[u]=y,c[a]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[n]=m/6e4,c[e]=m/1e3,c)[d]||m,f?y:g.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,e){if(!t)return this.$L;var n=this.clone();return n.$L=M(t,e,!0),n},d.clone=function(){return g.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.toISOString()},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return D.prototype=v.prototype,D.extend=function(t,e){return t(e,v,D),D},D.locale=M,D.isDayjs=y,D.unix=function(t){return D(1e3*t)},D.en=m[l],D.Ls=m,D});


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():undefined}(this,function(){"use strict";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}});


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var base64_url_decode = __webpack_require__(14);

function InvalidTokenError(message) {
  this.message = message;
}

InvalidTokenError.prototype = new Error();
InvalidTokenError.prototype.name = 'InvalidTokenError';

module.exports = function (token,options) {
  if (typeof token !== 'string') {
    throw new InvalidTokenError('Invalid token specified');
  }

  options = options || {};
  var pos = options.header === true ? 0 : 1;
  try {
    return JSON.parse(base64_url_decode(token.split('.')[pos]));
  } catch (e) {
    throw new InvalidTokenError('Invalid token specified: ' + e.message);
  }
};

module.exports.InvalidTokenError = InvalidTokenError;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var atob = __webpack_require__(15);

function b64DecodeUnicode(str) {
  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {
    var code = p.charCodeAt(0).toString(16).toUpperCase();
    if (code.length < 2) {
      code = '0' + code;
    }
    return '%' + code;
  }));
}

module.exports = function(str) {
  var output = str.replace(/-/g, "+").replace(/_/g, "/");
  switch (output.length % 4) {
    case 0:
      break;
    case 2:
      output += "==";
      break;
    case 3:
      output += "=";
      break;
    default:
      throw "Illegal base64url string!";
  }

  try{
    return b64DecodeUnicode(output);
  } catch (err) {
    return atob(output);
  }
};


/***/ }),
/* 15 */
/***/ (function(module, exports) {

/**
 * The code was extracted from:
 * https://github.com/davidchambers/Base64.js
 */

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function InvalidCharacterError(message) {
  this.message = message;
}

InvalidCharacterError.prototype = new Error();
InvalidCharacterError.prototype.name = 'InvalidCharacterError';

function polyfill (input) {
  var str = String(input).replace(/=+$/, '');
  if (str.length % 4 == 1) {
    throw new InvalidCharacterError("'atob' failed: The string to be decoded is not correctly encoded.");
  }
  for (
    // initialize result and counters
    var bc = 0, bs, buffer, idx = 0, output = '';
    // get next character
    buffer = str.charAt(idx++);
    // character found in table? initialize bit storage and add its ascii value;
    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
      // and if not first of each 4 characters,
      // convert the first 8 bits to one ascii character
      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0
  ) {
    // try to find character in table (0-63, not found => -1)
    buffer = chars.indexOf(buffer);
  }
  return output;
}


module.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/* eslint-disable no-unused-vars */
var Utilities = function () {
  /**
   * Deep clones a JS object using JSON.parse
   * This function will not clone object
   * functions
   * @param {Object} object
   */
  var cloneDeep = function cloneDeep(object) {
    return JSON.parse(JSON.stringify(object));
  };
  /**
   * Given an Object and its path, if exisits it will
   * return the value of it, if not the default
   * @param {Object} obj
   * @param {String} path
   * @param {*} def
   */
  var get = function get(fn, def) {
    try {
      return fn();
    } catch (e) {
      return def;
    }
  };
  /**
   *
   * @param {*} obj
   * @param {*} path
   * @param {*} def
   */
  var getFromPath = function getFromPath(obj, path, def) {
    var _path = path;

    if (path.includes(' as ')) {
      path = path.split(' as ');
      _path = path[0];
    }

    var assignedName = get(function () {
      return Array.isArray(path) && path[1].trim();
    }, undefined);

    var fullPath = _path.replace(/\[/g, '.').replace(/]/g, '').split('.').filter(Boolean).map(function (e) {
      return e.trim();
    });

    function everyFunc(step) {
      return !(step && (obj = obj[step]) === undefined);
    }

    var result = fullPath.every(everyFunc) ? obj : def;

    return { label: assignedName || _path, value: result };
  };
  /**
   *
   * @param {*} arr
   * @param {*} predicate
   */
  var uniqBy = function uniqBy(arr, predicate) {
    var cb = typeof predicate === 'function' ? predicate : function (o) {
      return o[predicate];
    };

    return [].concat(_toConsumableArray(arr.reduce(function (map, item) {
      var key = cb(item);

      map.has(key) || map.set(key, item);

      return map;
    }, new Map()).values()));
  };
  /**
   *
   */
  var orderBy = function orderBy() {};
  /**
   *
   * @param {*} value
   */
  var isEmpty = function isEmpty(value) {
    if (!value) {
      return true;
    }
    if (Array.isArray(value) || typeof value === 'string') {
      return !value.length;
    }
    for (var key in value) {
      if (hasOwnProperty.call(value, key)) {
        return false;
      }
    }
    return true;
  };
  /**
   *
   * @param {*} fn
   * @param {*} time
   */
  var debounce = function debounce(fn, time) {
    var timeout = void 0;

    return function () {
      var _this = this,
          _arguments = arguments;

      var functionCall = function functionCall() {
        return fn.apply(_this, _arguments);
      };

      clearTimeout(timeout);
      timeout = setTimeout(functionCall, time);
    };
  };
  /**
   * Recursively removes all NULL values
   * from an Object or an Array
   *
   * @static
   * @param {Array|Object} object Array, Object to clean
   * @returns {Array|Object} returns the cleaned value
   */
  var deleteNulls = function deleteNulls(object) {
    var obj = object;
    var isArray = obj instanceof Array;

    for (var k in obj) {
      if (obj[k] === null) isArray ? obj.splice(k, 1) : delete obj[k];else if (_typeof(obj[k]) === 'object') deleteNulls(obj[k]);
    }
    return obj;
  };

  var eachComponent = function eachComponent(components, fn, includeAll, path, parent) {
    if (!components) return;
    path = path || '';
    components.forEach(function (component) {
      if (!component) {
        return;
      }
      var hasColumns = component.columns && Array.isArray(component.columns);
      var hasRows = component.rows && Array.isArray(component.rows);
      var hasComps = component.components && Array.isArray(component.components);
      var noRecurse = false;
      var newPath = component.key ? path ? path + '.' + component.key : component.key : '';

      // Keep track of parent references.
      if (parent) {
        // Ensure we don't create infinite JSON structures.
        component.parent = _extends({}, parent);
        delete component.parent.components;
        delete component.parent.componentMap;
        delete component.parent.columns;
        delete component.parent.rows;
      }

      if (includeAll || component.tree || !hasColumns && !hasRows && !hasComps) {
        noRecurse = fn(component, newPath);
      }

      var subPath = function subPath() {
        if (component.key && !['panel', 'table', 'well', 'columns', 'fieldset', 'tabs', 'form'].includes(component.type) && (['datagrid', 'container', 'editgrid'].includes(component.type) || component.tree)) {
          return newPath;
        } else if (component.key && component.type === 'form') {
          return newPath + '.data';
        }
        return path;
      };

      if (!noRecurse) {
        if (hasColumns) {
          component.columns.forEach(function (column) {
            return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);
          });
        } else if (hasRows) {
          component.rows.forEach(function (row) {
            if (Array.isArray(row)) {
              row.forEach(function (column) {
                return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);
              });
            }
          });
        } else if (hasComps) {
          eachComponent(component.components, fn, includeAll, subPath(), parent ? component : null);
        }
      }
    });
  };

  var matchComponent = function matchComponent(component, query) {
    if (typeof query === 'string') {
      return component.key === query;
    }
    var matches = false;

    Object.keys(query).forEach(function (path) {
      matches = getFromPath(component, path).value === query[path];
      if (!matches) {
        return false;
      }
    });
    return matches;
  };

  var findComponents = function findComponents(components, query) {
    var results = [];

    eachComponent(components, function (component, path) {
      if (matchComponent(component, query)) {
        component.path = path;
        results.push(component);
      }
    }, true);
    return results;
  };

  var unixDate = function unixDate() {
    return Math.round(+new Date() / 1000);
  };

  return Object.freeze({
    cloneDeep: cloneDeep,
    get: get,
    orderBy: orderBy,
    isEmpty: isEmpty,
    debounce: debounce,
    getFromPath: getFromPath,
    deleteNulls: deleteNulls,
    eachComponent: eachComponent,
    findComponents: findComponents,
    unixDate: unixDate
  });
}();

exports.default = Utilities;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var bind = __webpack_require__(3);
var Axios = __webpack_require__(19);
var defaults = __webpack_require__(1);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(7);
axios.CancelToken = __webpack_require__(34);
axios.isCancel = __webpack_require__(6);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(35);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 18 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(1);
var utils = __webpack_require__(0);
var InterceptorManager = __webpack_require__(29);
var dispatchRequest = __webpack_require__(30);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 20 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(5);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var transformData = __webpack_require__(31);
var isCancel = __webpack_require__(6);
var defaults = __webpack_require__(1);
var isAbsoluteURL = __webpack_require__(32);
var combineURLs = __webpack_require__(33);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(7);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e, t) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(undefined, function () {
  return function (e) {
    var t = {};function r(n) {
      if (t[n]) return t[n].exports;var o = t[n] = { i: n, l: !1, exports: {} };return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
    }return r.m = e, r.c = t, r.d = function (e, t, n) {
      r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
    }, r.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
    }, r.t = function (e, t) {
      if (1 & t && (e = r(e)), 8 & t) return e;if (4 & t && "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && e && e.__esModule) return e;var n = Object.create(null);if (r.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var o in e) {
        r.d(n, o, function (t) {
          return e[t];
        }.bind(null, o));
      }return n;
    }, r.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };return r.d(t, "a", t), t;
    }, r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, r.p = "", r(r.s = 13);
  }([function (e, t, r) {
    var n = r(2),
        o = r(17),
        i = r(6),
        a = r(18),
        s = r(1),
        c = r(3),
        u = r(8),
        f = r(7),
        l = Array.prototype.concat;function d() {
      var e = l.apply([], arguments).filter(c);return 0 === e.length ? void 0 : e;
    }function p(e) {
      if (!s(e)) return e;var t = e.methods,
          r = e.properties,
          n = e.props,
          o = e.initializers,
          i = e.init,
          c = e.composers,
          l = e.deepProperties,
          p = e.deepProps,
          h = e.propertyDescriptors,
          v = e.staticProperties,
          m = e.statics,
          g = e.staticDeepProperties,
          y = e.deepStatics,
          w = e.configuration,
          b = e.conf,
          P = e.deepConfiguration,
          E = e.deepConf,
          x = s(n) || s(r) ? f({}, n, r) : void 0,
          A = s(p) ? u({}, p) : void 0;A = s(l) ? u(A, l) : A;var _ = s(m) || s(v) ? f({}, m, v) : void 0,
          O = s(y) ? u({}, y) : void 0;O = s(g) ? u(O, g) : O;var F = e.staticPropertyDescriptors;a(e.name) && (F = f({}, F || {}, { name: { value: e.name } }));var j = s(b) || s(w) ? f({}, b, w) : void 0,
          C = s(E) ? u({}, E) : void 0;C = s(P) ? u(C, P) : C;var M = d(i, o),
          k = d(c),
          N = {};return t && (N.methods = t), x && (N.properties = x), M && (N.initializers = M), k && (N.composers = k), A && (N.deepProperties = A), _ && (N.staticProperties = _), O && (N.staticDeepProperties = O), h && (N.propertyDescriptors = h), F && (N.staticPropertyDescriptors = F), j && (N.configuration = j), C && (N.deepConfiguration = C), N;
    }function h() {
      "use strict";
      for (var e = arguments.length, t = [], r = 0; r < e; r += 1) {
        var o = arguments[r];t.push(i(o) ? o : p(o));
      }return n.apply(this || v, t);
    }var v = o.compose({ staticProperties: { create: function create() {
          return this.apply(this, arguments);
        }, compose: h } }),
        m = o.compose.staticProperties;for (var g in m) {
      h[g] = m[g].bind(v);
    }h.compose = h.bind(), e.exports = h;
  }, function (e, t) {
    e.exports = function (e) {
      var t = typeof e === "undefined" ? "undefined" : _typeof(e);return Boolean(e) && ("object" === t || "function" === t);
    };
  }, function (e, t, r) {
    var n = r(5),
        o = r(3),
        i = r(1),
        a = r(6),
        s = r(15),
        c = r(7),
        u = r(8),
        f = Array.prototype.slice;function l(e, t) {
      var r = function e(t) {
        var r = e.compose || {},
            n = { __proto__: r.methods };if (u(n, r.deepProperties), c(n, r.properties), Object.defineProperties(n, r.propertyDescriptors || {}), !r.initializers || 0 === r.initializers.length) return n;void 0 === t && (t = {});for (var i = r.initializers, a = i.length, s = 0; s < a; s += 1) {
          var l = i[s];if (o(l)) {
            var d = l.call(n, t, { instance: n, stamp: e, args: f.apply(arguments) });n = void 0 === d ? n : d;
          }
        }return n;
      };e.staticDeepProperties && u(r, e.staticDeepProperties), e.staticProperties && c(r, e.staticProperties), e.staticPropertyDescriptors && Object.defineProperties(r, e.staticPropertyDescriptors);var n = o(r.compose) ? r.compose : t;return r.compose = function () {
        "use strict";
        return n.apply(this, arguments);
      }, c(r.compose, e), r;
    }function d(e, t, r) {
      if (n(t)) {
        var i = t.length,
            a = e[r] || [];e[r] = a;for (var s = 0; s < i; s += 1) {
          var c = t[s];o(c) && a.indexOf(c) < 0 && a.push(c);
        }
      }
    }function p(e, t, r, n) {
      i(t[r]) && (i(e[r]) || (e[r] = {}), n(e[r], t[r]));
    }function h(e, t, r) {
      p(e, t, r, u);
    }function v(e, t, r) {
      p(e, t, r, c);
    }function m(e, t) {
      var r = t && t.compose || t;v(e, r, "methods"), v(e, r, "properties"), h(e, r, "deepProperties"), v(e, r, "propertyDescriptors"), v(e, r, "staticProperties"), h(e, r, "staticDeepProperties"), v(e, r, "staticPropertyDescriptors"), v(e, r, "configuration"), h(e, r, "deepConfiguration"), d(e, r.initializers, "initializers"), d(e, r.composers, "composers");
    }e.exports = function e() {
      "use strict";
      var t = {},
          r = [];s(this) && (m(t, this), r.push(this));for (var o = 0; o < arguments.length; o++) {
        var i = arguments[o];s(i) && (m(t, i), r.push(i));
      }var c = l(t, e),
          u = t.composers;if (n(u) && u.length > 0) for (var f = 0; f < u.length; f += 1) {
        var d = (0, u[f])({ stamp: c, composables: r });c = a(d) ? d : c;
      }return c;
    };
  }, function (e, t) {
    e.exports = function (e) {
      return "function" == typeof e;
    };
  }, function (e, t) {
    var r;r = function () {
      return this;
    }();try {
      r = r || new Function("return this")();
    } catch (e) {
      "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) && (r = window);
    }e.exports = r;
  }, function (e, t) {
    e.exports = Array.isArray;
  }, function (e, t, r) {
    var n = r(3);e.exports = function (e) {
      return n(e) && n(e.compose);
    };
  }, function (e, t) {
    e.exports = Object.assign;
  }, function (e, t, r) {
    var n = r(16),
        o = r(1),
        i = r(5);function a(e, t) {
      if (void 0 === t) return e;if (i(t)) return (i(e) ? e : []).concat(t);if (!n(t)) return t;for (var r = o(e) ? e : {}, s = Object.keys(t), c = 0; c < s.length; c += 1) {
        var u = s[c],
            f = t[u];if (void 0 !== f) {
          var l = r[u],
              d = n(l) || i(f) ? l : {};r[u] = a(d, f);
        }
      }return r;
    }e.exports = function (e) {
      for (var t = 1; t < arguments.length; t++) {
        e = a(e, arguments[t]);
      }return e;
    };
  }, function (e, t, r) {
    "use strict";
    (function (e) {
      Object.defineProperty(t, "__esModule", { value: !0 });var n = i(r(0)),
          o = i(r(19));function i(e) {
        return e && e.__esModule ? e : { default: e };
      }t.default = (0, n.default)({ properties: { name: "baseModel", config: { remote: { path: void 0, token: void 0, pullForm: !1 }, local: { connector: "loki" }, merge: { connector: "formio-loki" } } }, methods: { getModelName: function getModelName() {
            return this.name;
          }, getFluentConfig: function getFluentConfig() {
            var t = void 0;return "undefined" != typeof window && window && window._FLUENT_ ? t = window._FLUENT_ : e && e._FLUENT_ && (t = e._FLUENT_), t;
          }, getConnector: function getConnector(e, t) {
            var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];return Array.isArray(e) ? this.getConnectorFromArray(e, t, r) : e instanceof Object ? e : void 0;
          }, getConnectorFromArray: function getConnectorFromArray(e, t) {
            var r = this,
                n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];if (1 === e.length) return e[0];if (this.config && this.config[t] && this.config[t].connector) {
              var o = e.find(function (e) {
                return e.name === r.config[t].connector;
              });if (o instanceof Object) return o;
            }if (n) {
              var i = e.find(function (e) {
                return e.name === n;
              });if (i instanceof Object) return i;
            }var a = e.find(function (e) {
              return e.default;
            });return a instanceof Object ? a : void 0;
          }, remote: function remote() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = e.token,
                r = void 0 === t ? void 0 : t,
                n = e.pullForm,
                o = void 0 === n ? void 0 : n,
                i = e.connectorName,
                a = void 0 === i ? void 0 : i,
                s = this.getFluentConfig(),
                c = s && s.connectors && s.connectors.remote;if (!c) throw new Error("No remote connector was defined. Please define it using Fluent.config()");var u = this.getConnector(c, "remote", a || !1);if (this.config.remote.token = r || this.config.remote.token, o && (this.config.remote.pullForm = o || this.config.remote.pullForm), u) return u.connector({ remoteConnection: this.config.remote, connector: u });throw new Error("No default remote connector found. Please assign one as your default in Fluent.config");
          }, local: function local() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).connectorName,
                t = void 0 === e ? void 0 : e,
                r = this.getFluentConfig(),
                n = r && r.connectors && r.connectors.local;if (!n) throw new Error("No local connector was defined. Please define it using Fluent.config()");var o = this.getConnector(n, "local", t || !1);if (o) return o.connector({ name: this.name, connector: o });throw new Error("No default local connector found. Please assign one as your default in Fluent.config");
          }, merged: function merged() {
            var e = this.local(),
                t = this.remote(),
                r = this.getFluentConfig(),
                n = r && r.connectors && r.connectors.merge;if (!n) throw new Error("No merge connector was defined. Please define it using Fluent.config()");var o = this.getConnector(n, "merge");if (o) return o.connector({ local: e, remote: t, name: this.name, connector: o });throw new Error("No default merge connector found. Please assign one as your default in Fluent.config");
          } } }).compose(o.default);
    }).call(this, r(4));
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });var n = Object.assign || function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];for (var n in r) {
          Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
        }
      }return e;
    },
        o = a(r(0)),
        i = a(r(11));function a(e) {
      return e && e.__esModule ? e : { default: e };
    }function s(e) {
      if (Array.isArray(e)) {
        for (var t = 0, r = Array(e.length); t < e.length; t++) {
          r[t] = e[t];
        }return r;
      }return Array.from(e);
    }t.default = (0, o.default)({ init: function init(e) {
        if (!Array.isArray(e)) throw new Error("Collect method only accepts arrays of data");this.data = e;
      }, properties: { data: [] }, methods: { get: function get() {
          return this.data;
        }, all: function all() {
          return this.get();
        }, avg: function avg(e) {
          return this.average(e);
        }, average: function average() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
              t = [].concat(s(this.data)),
              r = t.reduce(function (t, r) {
            var n = r;if (r instanceof Object) {
              var o = i.default.getFromPath(r, e, void 0);void 0 !== o && o.value && (n = o.value);
            }return t + n;
          }, 0);try {
            return r / t.length;
          } catch (e) {
            throw new Error('Division between "' + r + '" and "' + t.length + '" is not valid.');
          }
        }, chunkApply: function chunkApply(e, t) {
          var r,
              n = this;return (r = regeneratorRuntime.mark(function r() {
            var o, i, a, s;return regeneratorRuntime.wrap(function (r) {
              for (;;) {
                switch (r.prev = r.next) {case 0:
                    if (void 0 !== t) {
                      r.next = 2;break;
                    }throw new Error("Callback function not defined.");case 2:
                    return o = n.data.length, i = 0, n.chunks(e), a = function a(r, n) {
                      return r.then(function () {
                        return Promise.all(n.map(function (e) {
                          return t(e);
                        }));
                      }).then(function () {
                        i = i + e > o ? o : i + e, console.log("Processed " + i + "/" + o + " elements...");
                      });
                    }, console.log("Processed " + i + "/" + o + " elements..."), s = n.data.reduce(a, Promise.resolve()), r.abrupt("return", s);case 9:case "end":
                    return r.stop();}
              }
            }, r, n);
          }), function () {
            var e = r.apply(this, arguments);return new Promise(function (t, r) {
              return function n(o, i) {
                try {
                  var a = e[o](i),
                      s = a.value;
                } catch (e) {
                  return void r(e);
                }if (!a.done) return Promise.resolve(s).then(function (e) {
                  n("next", e);
                }, function (e) {
                  n("throw", e);
                });t(s);
              }("next");
            });
          })();
        }, chunks: function chunks(e) {
          for (var t = [].concat(s(this.data)), r = []; t.length;) {
            r.push(t.splice(0, e));
          }return this.data = r, this;
        }, collapse: function collapse() {
          var e = [].concat(s(this.data)),
              t = [];return e.forEach(function (e) {
            Array.isArray(e) ? e.forEach(function (e) {
              t.push(e);
            }) : t.push(e);
          }), this.data = t, this;
        }, unChunk: function unChunk() {
          return this.collapse();
        }, combine: function combine(e) {
          var t = [].concat(s(this.data)),
              r = void 0;return t.forEach(function (t, o) {
            t instanceof Object ? (r || (r = []), r[o] = n({}, t, { _value: e[o] })) : (r || (r = {}), r[t] = e[o]);
          }), this.data = r, this;
        }, concat: function concat(e) {
          return this.data = [].concat(s(this.data), s(e)), this;
        }, contains: function contains() {
          var e = void 0,
              t = void 0,
              r = void 0;return 1 === arguments.length ? (this.isFunction(arguments.length <= 0 ? void 0 : arguments[0]) && (r = arguments.length <= 0 ? void 0 : arguments[0]), e = arguments.length <= 0 ? void 0 : arguments[0]) : (e = arguments.length <= 1 ? void 0 : arguments[1], t = arguments.length <= 0 ? void 0 : arguments[0]), [].concat(s(this.data)).some(function (n, o) {
            if (r) return !!r(n, o);var a = n;if (n instanceof Object) {
              var s = i.default.getFromPath(n, t, void 0);s.value && (a = s.value);
            }return a === e;
          });
        }, duplicatesBy: function duplicatesBy(e) {
          var t = [].concat(s(this.data)),
              r = [];return t.reduce(function (t, n) {
            var o = e.reduce(function (e, t) {
              return e + i.default.getFromPath(n, t, "").value;
            }, "");return t.hasOwnProperty(o) ? r.push(n) : t[o] = !0, t;
          }, {}), this.data = r, this;
        }, count: function count() {
          return this.data.length;
        }, isFunction: function isFunction(e) {
          return e && "[object Function]" === {}.toString.call(e);
        } } });
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });var n,
        o = (n = function n(e, t) {
      try {
        return e();
      } catch (e) {
        return t;
      }
    }, Object.freeze({ get: n, getFromPath: function getFromPath(e, t, r) {
        var o = t;t.includes(" as ") && (o = (t = t.split(" as "))[0]);var i = n(function () {
          return Array.isArray(t) && t[1].trim();
        }, void 0),
            a = o.replace(/\[/g, ".").replace(/]/g, "").split(".").filter(Boolean).map(function (e) {
          return e.trim();
        });return { label: i || o, value: a.every(function (t) {
            return !(t && void 0 === (e = e[t]));
          }) ? e : r };
      } }));t.default = o;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });var n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
      return typeof e === "undefined" ? "undefined" : _typeof(e);
    } : function (e) {
      return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
    },
        o = s(r(0)),
        i = s(r(11)),
        a = s(r(10));function s(e) {
      return e && e.__esModule ? e : { default: e };
    }function c(e) {
      if (Array.isArray(e)) {
        for (var t = 0, r = Array(e.length); t < e.length; t++) {
          r[t] = e[t];
        }return r;
      }return Array.from(e);
    }function u(e) {
      return function () {
        var t = e.apply(this, arguments);return new Promise(function (e, r) {
          return function n(o, i) {
            try {
              var a = t[o](i),
                  s = a.value;
            } catch (e) {
              return void r(e);
            }if (!a.done) return Promise.resolve(s).then(function (e) {
              n("next", e);
            }, function (e) {
              n("throw", e);
            });e(s);
          }("next");
        });
      };
    }t.default = (0, o.default)({ init: function init(e) {
        var t = e.name,
            r = e.remoteConnection,
            n = e.connector;if (!t && !r) throw new Error("Model must have a name or path");if (!n) throw new Error("Model must have a connector. Please register one using Fluent.config");this.name = t || this.name, this.remoteConnection = r || this.remoteConnection, this.connector = n || this.connector, this.chainReference = [], this.whereArray = [], this.orWhereArray = [], this.selectArray = [], this.orderByArray = [], this.limitNumber = void 0, this.offsetNumber = void 0, this.populate = [], this.chunk = null, this.pullSize = null, this.ownerId = void 0, this.paginator = void 0, this.rawQuery = void 0;
      }, properties: { operators: ["=", "<", ">", "<=", ">=", "<>", "!=", "in", "nin", "like", "regexp", "startsWith", "endsWith", "contains"] }, methods: { get: function get() {
          throw new Error("get() method not implemented");
        }, all: function all() {
          throw new Error("all() method not implemented");
        }, find: function find(e) {
          throw new Error("find() method not implemented");
        }, findOne: function findOne() {
          throw new Error("findOne() method not implemented");
        }, remove: function remove() {
          throw new Error("remove() method not implemented");
        }, softDelete: function softDelete() {
          throw new Error("softDelete() method not implemented");
        }, insert: function insert() {
          throw new Error("insert() method not implemented");
        }, update: function update() {
          throw new Error("update() method not implemented");
        }, clear: function clear() {
          throw new Error("clear() method not implemented");
        }, updateOrCreate: function updateOrCreate() {
          throw new Error("updateOrCreate() method not implemented");
        }, findAndRemove: function findAndRemove() {
          throw new Error("findAndRemove() method not implemented");
        }, paginate: function paginate() {
          throw new Error("paginate() method not implemented");
        }, tableView: function tableView() {
          throw new Error("tableView() method not implemented");
        }, raw: function raw() {
          throw new Error("raw() method not implemented");
        }, owner: function owner(e) {
          return this.chainReference.push({ method: "owner", args: e }), this.ownerId = e, this;
        }, own: function own(e) {
          return this.owner(e);
        }, first: function first() {
          var e = this;return u(regeneratorRuntime.mark(function t() {
            var r;return regeneratorRuntime.wrap(function (t) {
              for (;;) {
                switch (t.prev = t.next) {case 0:
                    return t.next = 2, e.get();case 2:
                    return r = t.sent, t.abrupt("return", i.default.get(function () {
                      return r[0];
                    }, []));case 4:case "end":
                    return t.stop();}
              }
            }, t, e);
          }))();
        }, collect: function collect() {
          var e = this;return u(regeneratorRuntime.mark(function t() {
            var r;return regeneratorRuntime.wrap(function (t) {
              for (;;) {
                switch (t.prev = t.next) {case 0:
                    return t.next = 2, e.get();case 2:
                    if (r = t.sent, Array.isArray(r)) {
                      t.next = 5;break;
                    }throw new Error("Collect method only accepts arrays of data");case 5:
                    return t.abrupt("return", (0, a.default)(r));case 6:case "end":
                    return t.stop();}
              }
            }, t, e);
          }))();
        }, select: function select() {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }return t = this.prepareInput(t), this.chainReference.push({ method: "select", args: t }), this.selectArray = this.selectArray.concat(t).filter(function (e, t, r) {
            return r.indexOf(e) === t;
          }), this;
        }, jsApplySelect: function jsApplySelect(e) {
          var t = this,
              r = Array.isArray(e) ? [].concat(c(e)) : [e];return this.selectArray.length > 0 && (r = r.map(function (e) {
            var r = {};return t.selectArray.forEach(function (t) {
              var o = i.default.getFromPath(e, t, void 0),
                  a = i.default.get(function () {
                return o.value;
              }, void 0);void 0 !== a && ("object" === (void 0 === a ? "undefined" : n(a)) && a.hasOwnProperty("data") && a.data.hasOwnProperty("name") ? r[o.label] = a.data.name : r[o.label] = a);
            }), r;
          })), r;
        }, offset: function offset(e) {
          return this.chainReference.push({ method: "offset", args: e }), this.offsetNumber = e, this;
        }, skip: function skip(e) {
          return this.offset(e);
        }, where: function where() {
          for (var e = this, t = arguments.length, r = Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }return this.chainReference.push({ method: "where", args: r }), this.whereArray = [], (r = Array.isArray(r[0]) ? r : [r]).forEach(function (t) {
            if (3 !== t.length) throw new Error('There where clouse is not properly formatted, expecting: ["attribute", "operator","value"] but got "' + JSON.stringify(t) + '" ');e.whereArray.push(t);
          }), this;
        }, andWhere: function andWhere() {
          for (var e = this, t = arguments.length, r = Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }return this.chainReference.push({ method: "andWhere", args: r }), (r = Array.isArray(r[0]) ? r : [r]).forEach(function (t) {
            if (3 !== t.length) throw new Error('There where clouse is not properly formatted, expecting: ["attribute", "operator","value"] but got "' + JSON.stringify(t) + '" ');e.whereArray.push(t);
          }), this;
        }, orWhere: function orWhere() {
          for (var e = this, t = arguments.length, r = Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }return this.chainReference.push({ method: "orWhere", args: r }), (r = Array.isArray(r[0]) ? r : [r]).forEach(function (t) {
            if (3 !== t.length) throw new Error('There orWhere clouse is not properly formatted, expecting: ["attribute", "operator","value"] but got "' + JSON.stringify(t) + '" ');e.orWhereArray.push(t);
          }), this;
        }, limit: function limit(e) {
          return this.chainReference.push({ method: "limit", args: e }), this.limitNumber = e, this;
        }, take: function take(e) {
          return this.limit(e);
        }, pluck: function pluck(e) {
          var t = this;return u(regeneratorRuntime.mark(function r() {
            var n;return regeneratorRuntime.wrap(function (r) {
              for (;;) {
                switch (r.prev = r.next) {case 0:
                    return t.chainReference.push({ method: "pluck", args: e }), r.next = 3, t.get();case 3:
                    return n = (n = r.sent).map(function (t) {
                      var r = i.default.getFromPath(t, e, void 0);if (void 0 !== r.value) return r.value;
                    }), r.abrupt("return", n);case 6:case "end":
                    return r.stop();}
              }
            }, r, t);
          }))();
        }, orderBy: function orderBy() {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }return this.chainReference.push({ method: "orderBy", args: t }), this.orderByArray = t, this;
        }, jsApplyOrderBy: function jsApplyOrderBy(e) {
          var t = [].concat(c(e));if (0 === this.orderByArray.length) return t;var r = this.orderByArray[0];if (this.selectArray.length > 0 && (r.includes(".") || r.includes("["))) throw new Error('Cannot orderBy nested attribute "' + r + '" when using Select. You must rename the attribute');var n = this.orderByArray[1],
              o = this.orderByArray[2];return o || (o = "string"), t = t.sort(function (e, t) {
            var a = i.default.getFromPath(e, r, void 0).value,
                s = i.default.getFromPath(t, r, void 0).value;if (void 0 === a || void 0 === s) throw new Error('Cannot order by property "' + r + '" not all values have this property');return o.includes("string") || o.includes("number") ? "asc" === n ? a > s ? 1 : a < s ? -1 : 0 : a > s ? -1 : a < s ? 1 : 0 : o.includes("date") ? "asc" === n ? new Date(a) - new Date(s) : new Date(s) - new Date(a) : void 0;
          });
        }, prepareInput: function prepareInput(e) {
          var t = [];return e.forEach(function (e) {
            var r = Array.isArray(e) ? e : e.split(",");r = r.map(function (e) {
              return e.trim();
            }), t = t.concat(r);
          }), t.filter(function (e, t, r) {
            return r.indexOf(e) === t;
          }), t;
        }, ArrayInsert: function ArrayInsert(e, t) {
          var r = this;return u(regeneratorRuntime.mark(function n() {
            var o, i, a, s, c, u, f, l;return regeneratorRuntime.wrap(function (n) {
              for (;;) {
                switch (n.prev = n.next) {case 0:
                    o = 1, i = e.length, a = !0, s = !1, c = void 0, n.prev = 5, u = e[Symbol.iterator]();case 7:
                    if (a = (f = u.next()).done) {
                      n.next = 26;break;
                    }return l = f.value, t && t.showProgress && console.log("Inserting " + o + " of " + i), n.prev = 10, n.next = 13, r.insert(l, t);case 13:
                    n.sent, t && t.showProgress && console.log("Element " + o + " inserted"), o++, n.next = 23;break;case 18:
                    n.prev = 18, n.t0 = n.catch(10), console.log("ERROR - Element " + o + " - " + JSON.stringify(l) + " could not be inserted"), console.log(n.t0), o++;case 23:
                    a = !0, n.next = 7;break;case 26:
                    n.next = 32;break;case 28:
                    n.prev = 28, n.t1 = n.catch(5), s = !0, c = n.t1;case 32:
                    n.prev = 32, n.prev = 33, !a && u.return && u.return();case 35:
                    if (n.prev = 35, !s) {
                      n.next = 38;break;
                    }throw c;case 38:
                    return n.finish(35);case 39:
                    return n.finish(32);case 40:case "end":
                    return n.stop();}
              }
            }, n, r, [[5, 28, 32, 40], [10, 18], [33,, 35, 39]]);
          }))();
        } } });
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.Event = t.MergeConnector = t.Interface = t.Fluent = t.Model = void 0;var n = c(r(14)),
        o = c(r(9)),
        i = c(r(12)),
        a = c(r(20)),
        s = c(r(21));function c(e) {
      return e && e.__esModule ? e : { default: e };
    }t.Model = o.default, t.Fluent = n.default, t.Interface = i.default, t.MergeConnector = a.default, t.Event = s.default;
  }, function (e, t, r) {
    "use strict";
    (function (e) {
      Object.defineProperty(t, "__esModule", { value: !0 });var n = a(r(0)),
          o = a(r(9)),
          i = a(r(10));function a(e) {
        return e && e.__esModule ? e : { default: e };
      }function s(e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = Array(e.length); t < e.length; t++) {
            r[t] = e[t];
          }return r;
        }return Array.from(e);
      }var c = (0, n.default)({ init: function init() {
          this.registerGlobalVariable();
        }, properties: {}, methods: { model: function model() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
              t[r] = arguments[r];
            }return this.registerModel(t), o.default.compose.apply(o.default, s(t));
          }, extend: function extend() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
              t[r] = arguments[r];
            }return this.registerModel(t), o.default.compose.apply(o.default, s(t));
          }, compose: function compose() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
              t[r] = arguments[r];
            }return this.registerModel(t), o.default.compose.apply(o.default, s(t));
          }, collect: function collect(e) {
            return (0, i.default)(e);
          }, registerGlobalVariable: function registerGlobalVariable() {
            "undefined" != typeof window && window && !window._FLUENT_ && (window._FLUENT_ = { connectors: {}, models: {} }), e && !e._FLUENT_ && (e._FLUENT_ = { connectors: {}, models: {} });
          }, registerModel: function registerModel(t) {
            var r = t && t[0] && t[0].properties && t[0].properties.name ? t[0].properties.name : void 0;if (r && "baseModel" !== r) {
              if ("string" != typeof r) throw new Error("You must assign a name to your Model when using Fluent.compose");"undefined" == typeof window ? e._FLUENT_.models[r] = !0 : window._FLUENT_.models[r] = !0;
            }
          }, config: function config(t) {
            var r = t.REMOTE_CONNECTORS,
                n = void 0 === r ? void 0 : r,
                o = t.LOCAL_CONNECTORS,
                i = void 0 === o ? void 0 : o,
                a = t.MERGE_CONNECTORS,
                s = void 0 === a ? void 0 : a;"undefined" != typeof window && window && (window._FLUENT_.connectors = { local: i, remote: n, merge: s }), void 0 !== e && e && (e._FLUENT_.connectors = { local: i, remote: n, merge: s });
          }, getConfig: function getConfig() {
            return "undefined" != typeof window && window ? window._FLUENT_ : void 0 !== e && e ? e._FLUENT_ : void 0;
          } } })();t.default = c;
    }).call(this, r(4));
  }, function (e, t, r) {
    e.exports = r(1);
  }, function (e, t) {
    e.exports = function (e) {
      return Boolean(e) && "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && Object.getPrototypeOf(e) === Object.prototype;
    };
  }, function (e, t, r) {
    var n = r(2);function o(e) {
      return function (t) {
        "use strict";
        var r = {};return r[e] = t, this && this.compose ? this.compose(r) : n(r);
      };
    }var i = o("properties"),
        a = o("staticProperties"),
        s = o("configuration"),
        c = o("deepProperties"),
        u = o("staticDeepProperties"),
        f = o("deepConfiguration"),
        l = o("initializers");e.exports = n({ staticProperties: { methods: o("methods"), props: i, properties: i, statics: a, staticProperties: a, conf: s, configuration: s, deepProps: c, deepProperties: c, deepStatics: u, staticDeepProperties: u, deepConf: f, deepConfiguration: f, init: l, initializers: l, composers: o("composers"), propertyDescriptors: o("propertyDescriptors"), staticPropertyDescriptors: o("staticPropertyDescriptors") } });
  }, function (e, t) {
    e.exports = function (e) {
      return "string" == typeof e;
    };
  }, function (e, t, r) {
    var n = r(2),
        o = new WeakMap(),
        i = function i(e, t) {
      function r() {
        "use strict";
        var t = o.get(this);return e.apply(t, arguments);
      }return Object.defineProperty(r, "name", { value: t, configurable: !0 }), r;
    };function a(e, t) {
      var r = t.stamp.compose,
          n = r.deepConfiguration.Privatize.methods,
          a = {};o.set(a, this);var s = r.methods;if (!s) return a;for (var c = Object.keys(s), u = 0; u < c.length; u++) {
        var f = c[u];n.indexOf(f) < 0 && (a[f] = i(s[f], f));
      }if ("undefined" != typeof Symbol) {
        var l = Symbol.for("stamp");s[l] && (a[l] = t.stamp);
      }return a;
    }var s = n({ initializers: [a], deepConfiguration: { Privatize: { methods: [] } }, staticProperties: { privatizeMethods: function privatizeMethods() {
          "use strict";
          for (var e = [], t = 0; t < arguments.length; t++) {
            var r = arguments[t];"string" == typeof r && r.length > 0 && e.push(r);
          }return (this && this.compose ? this : s).compose({ deepConfiguration: { Privatize: { methods: e } } });
        } }, composers: [function (e) {
        var t = e.stamp.compose.initializers;t.splice(t.indexOf(a), 1), t.push(a);
      }] });e.exports = s;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });var n,
        o = r(12),
        i = (n = o) && n.__esModule ? n : { default: n };t.default = i.default.compose({ properties: { localFx: void 0, remoteFx: void 0 }, init: function init(e) {
        this.connectors = e;
      }, methods: { get: function get() {
          var e,
              t = this;return (e = regeneratorRuntime.mark(function e() {
            var r, n;return regeneratorRuntime.wrap(function (e) {
              for (;;) {
                switch (e.prev = e.next) {case 0:
                    return t.prepareMergedFunctions(), e.next = 3, t.localFx.get();case 3:
                    return r = e.sent, e.next = 6, t.remoteFx.get();case 6:
                    return n = e.sent, e.abrupt("return", r.concat(n));case 8:case "end":
                    return e.stop();}
              }
            }, e, t);
          }), function () {
            var t = e.apply(this, arguments);return new Promise(function (e, r) {
              return function n(o, i) {
                try {
                  var a = t[o](i),
                      s = a.value;
                } catch (e) {
                  return void r(e);
                }if (!a.done) return Promise.resolve(s).then(function (e) {
                  n("next", e);
                }, function (e) {
                  n("throw", e);
                });e(s);
              }("next");
            });
          })();
        }, prepareMergedFunctions: function prepareMergedFunctions() {
          var e = this;this.localFx = this.connectors.local, this.remoteFx = this.connectors.remote, this.chainReference.forEach(function (t) {
            var r = t.method,
                n = t.args;e.localFx = e.localFx[r](n), e.remoteFx = e.remoteFx[r](n);
          });
        } } });
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });var n = function () {
      var e = function e(_e, t) {
        var r = document.createEvent("CustomEvent");return t = t || { bubbles: !1, cancelable: !1, detail: void 0 }, r.initCustomEvent(_e, t.bubbles, t.cancelable, t.detail), r;
      };return Object.freeze({ emit: function emit(t) {
          var r = t.name,
              n = t.data,
              o = t.text;if (!r) throw new Error("Event must have a name.");if (!n) throw new Error("Event must have data.");if (!o) throw new Error("Event must have a text.");var i = e(r, { detail: { data: n, text: o } });window.dispatchEvent(i);
        }, listen: function listen(e) {
          var t = e.name,
              r = e.callback;if (!t) throw new Error("Listener must have a name.");if (!r) throw new Error("Listener must have a callback.");window.addEventListener(t, r);
        }, remove: function remove(e) {
          var t = e.name,
              r = e.callback;if (!t) throw new Error("Listener must have a name to detach");if (!r) throw new Error("Listener must have a callback to detach");window.removeEventListener(t, r);
        } });
    }();t.default = n;
  }]);
});
//# sourceMappingURL=goat-fluent.min.js.map
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(37)(module)))

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Event = __webpack_require__(39);

var _Event2 = _interopRequireDefault(_Event);

var _axios = __webpack_require__(2);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
var Connection = function () {
  var online = typeof window !== "undefined" && window && window.navigator ? window.navigator.onLine : true;

  function setOnline() {
    if (!online) {
      online = true;
      _Event2.default.emit({
        name: "FAST:CONNECTION:ONLINE",
        data: online,
        text: "Application is now online"
      });
    }
  }

  function setOffline() {
    if (online) {
      online = false;
      _Event2.default.emit({
        name: "FAST:CONNECTION:OFFLINE",
        data: online,
        text: "Application is now offline"
      });
    }
  }

  /**
   * [status description]
   * @return {Promise} [description]
   */
  function initEventListeners() {
    _Event2.default.listen({
      name: "online",
      callback: function callback() {
        console.log("App is now online");
        setOnline();
      }
    });
    _Event2.default.listen({
      name: "offline",
      callback: function callback() {
        console.log("App is now offline");
        setOffline();
      }
    });
  }

  function isOnline() {
    return new Promise(function (resolve, reject) {
      _axios2.default.get("https://yesno.wtf/api").then(function (res) {
        resolve(true);
      }).catch(function (err) {
        resolve(false);
      });
    });
  }

  return Object.freeze({
    isOnline: isOnline,
    initEventListeners: initEventListeners
  });
}();
// import Promise from 'bluebird';
exports.default = Connection;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Event = function () {
  var CustomEvent = function CustomEvent(event, params) {
    var evt = document.createEvent('CustomEvent');

    params = params || { bubbles: false, cancelable: false, detail: undefined };

    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    return evt;
  };

  function emit(_ref) {
    var name = _ref.name,
        data = _ref.data,
        text = _ref.text;

    if (!name) throw new Error('Event must have a name.');
    if (!data) throw new Error('Event must have data.');
    if (!text) throw new Error('Event must have a text.');
    var customEvent = CustomEvent(name, {
      detail: {
        data: data,
        text: text
      }
    });

    window.dispatchEvent(customEvent);
  }
  function listen(_ref2) {
    var name = _ref2.name,
        callback = _ref2.callback;

    if (!name) throw new Error('Listener must have a name.');
    if (!callback) throw new Error('Listener must have a callback.');
    window.addEventListener(name, callback);
  }

  function remove(_ref3) {
    var name = _ref3.name,
        callback = _ref3.callback;

    if (!name) throw new Error('Listener must have a name to detach');
    if (!callback) throw new Error('Listener must have a callback to detach');
    window.removeEventListener(name, callback);
  }
  return Object.freeze({
    emit: emit,
    listen: listen,
    remove: remove
  });
}();

exports.default = Event;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AuthenticationError = function (_Error) {
  _inherits(AuthenticationError, _Error);

  function AuthenticationError(message) {
    _classCallCheck(this, AuthenticationError);

    var _this = _possibleConstructorReturn(this, (AuthenticationError.__proto__ || Object.getPrototypeOf(AuthenticationError)).call(this, message));

    _this.name = "AuthenticationError";
    return _this;
  }

  return AuthenticationError;
}(Error);

exports.default = AuthenticationError;
;

/***/ })
/******/ ]);
});
//# sourceMappingURL=fluent-formio.min.js.map